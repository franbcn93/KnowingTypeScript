{"version":3,"sources":["components/Counter.tsx","components/Usuario.tsx","components/Timer.tsx","components/TimerPadre.tsx","components/ContadorRed.tsx","App.tsx","index.tsx"],"names":["Counter","useState","counter","setCounter","incrementar","numero","onClick","className","Usuario","user","setUser","uid","name","JSON","stringify","Timer","milisegundos","segundos","setSegundos","ref","useRef","useEffect","current","clearInterval","setInterval","s","TimerPadre","millisegundos","setMillisegundos","initialState","contador","contadorReducer","state","action","type","payload","ContadorRed","useReducer","dispatch","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0JAGaA,EAAU,WAAO,IAAD,EAEKC,mBAAS,GAFd,mBAElBC,EAFkB,KAETC,EAFS,KAInBC,EAAc,WAAgC,IAA9BC,EAA6B,uDAAZ,EACnCF,EAAYD,EAAUG,IAI1B,OACI,qCACI,0CACA,2CAAeH,EAAf,OACA,uBACA,wBACII,QAAU,kBAAMF,KAChBG,UAAU,+BAFd,gBAMA,wBACID,QAAU,kBAAMF,EAAY,IAC5BG,UAAU,+BAFd,gBAMA,wBACID,QAAU,kBAAMH,EAAW,IAC3BI,UAAU,8BAFd,uBCrBCC,EAAU,WAAO,IAAD,EAEDP,qBAFC,mBAElBQ,EAFkB,KAEZC,EAFY,KAWzB,OACI,sBAAKH,UAAU,OAAf,UACI,0CAEA,wBACID,QAZE,WACVI,EAAQ,CACJC,IAAK,UACLC,KAAM,mBAUFL,UAAU,0BAFd,mBAOME,EAEI,oCAAQI,KAAKC,UAAWL,GAAxB,OADA,uDCzBTM,EAAQ,SAAC,GAAmC,IAAhCC,EAA+B,EAA/BA,aAA+B,EAEpBf,mBAAS,GAFW,mBAE7CgB,EAF6C,KAEnCC,EAFmC,KAG9CC,EAAMC,mBAQZ,OALAC,qBAAW,WACPF,EAAIG,SAAWC,cAAeJ,EAAIG,SAClCH,EAAIG,QAAUE,aAAa,kBAAMN,GAAa,SAAAO,GAAC,OAAIA,EAAI,OAAMT,KAC9D,CAACA,IAGA,mCACI,yCAAW,gCAASC,UChBnBS,EAAa,WAAO,IAAD,EAEczB,mBAAS,KAFvB,mBAErB0B,EAFqB,KAENC,EAFM,KAI5B,OACI,qCACI,iDAAqBD,KAErB,uBAEA,wBAAQpB,UAAU,0BACVD,QAAU,kBAAMsB,EAAiB,MADzC,kBAKA,wBAAQrB,UAAU,0BACVD,QAAU,kBAAMsB,EAAiB,MADzC,kBAMA,cAAC,EAAD,CAAOZ,aAAeW,Q,OCtB5BE,EAAe,CACjBC,SAAU,IAURC,EAAkB,SAAEC,EAA4BC,GAElD,OAASA,EAAOC,MACZ,IAAK,cACD,OAAO,2BACAF,GADP,IAEIF,SAAUE,EAAMF,SAAW,IAInC,IAAK,cACD,OAAO,2BACAE,GADP,IAEIF,SAAUE,EAAMF,SAAW,IAGnC,IAAK,SACD,OAAO,2BACAE,GADP,IAEIF,SAAUG,EAAOE,UAIzB,QACI,OAAOH,IAQNI,EAAc,WAAO,IAAD,EAEKC,qBAAWN,EAAiBF,GAFjC,mBAEnBC,EAFmB,KAEnBA,SAAYQ,EAFO,KAK7B,OACI,qCACC,4CAAgBR,KAChB,wBAAQvB,UAAU,0BACXD,QAAU,kBAAMgC,EAAS,CAAEJ,KAAM,iBADxC,gBAIA,wBAAQ3B,UAAU,0BACXD,QAAU,kBAAMgC,EAAS,CAAEJ,KAAM,iBADxC,gBAKA,wBAAQ3B,UAAU,yBACXD,QAAU,kBAAMgC,EAAS,CAAEJ,KAAM,SAAUC,QAAS,OAD3D,qBC7BMI,MA1Bf,WACE,OACE,qCACE,oDACA,uBAEA,0CACA,cAAC,EAAD,IAEA,cAAC,EAAD,IAEA,oDACA,uBAEA,cAAC,EAAD,IAEA,4CACA,uBACA,cAAC,EAAD,QCpBNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d348035e.chunk.js","sourcesContent":["import { useState } from 'react';\n\n\nexport const Counter = () => {\n\n    const [counter, setCounter] = useState(0);\n\n    const incrementar = ( numero: number = 1 ):void => {\n        setCounter( counter + numero);\n    }\n\n\n    return (\n        <>\n            <h3>Counter:</h3>\n            <span>Valor: { counter } </span>\n            <br/>\n            <button\n                onClick={ () => incrementar() } \n                className=\"btn btn-outline-primary mt-2\">\n                +1\n            </button>\n\n            <button\n                onClick={ () => incrementar(2) } \n                className=\"btn btn-outline-primary mt-2\">\n                +2\n            </button>\n\n            <button\n                onClick={ () => setCounter(0) } \n                className=\"btn btn-outline-danger mt-2\">\n                Reset\n            </button>\n        </>\n    )\n}","import { useState } from 'react';\n\ninterface User {\n    uid: string;\n    name: string;\n}\n\n\nexport const Usuario = () => {\n\n    const [user, setUser] = useState<User>();\n\n    const login = () => {\n        setUser({\n            uid: 'ABC1234',\n            name: 'Paco Par√≠s'\n        });\n    }\n\n    return (\n        <div className=\"mt-2\">\n            <h3>Usuario:</h3>\n\n            <button\n                onClick={ login }\n                className=\"btn btn-outline-primary\">\n                Login\n            </button>\n\n            {\n                (!user) \n                    ? <pre> No hay usuario </pre>\n                    : <pre> { JSON.stringify( user ) } </pre>\n            }\n\n            \n        </div>\n    )\n}","import { useEffect, useRef, useState } from 'react';\n\ntype TimerArgs = {\n    milisegundos: number\n}\n\nexport const Timer = ( { milisegundos }: TimerArgs ) => {\n\n    const [segundos, setSegundos] = useState(0);\n    const ref = useRef<NodeJS.Timeout>();\n\n\n    useEffect( () => {\n        ref.current && clearInterval( ref.current );\n        ref.current = setInterval( () => setSegundos( s => s + 1 ) , milisegundos );\n    }, [milisegundos])\n\n    return (\n        <>\n            <h4>Timer: <small>{ segundos }</small></h4>\n        </>\n    )\n}","import { useState } from \"react\";\nimport { Timer } from './Timer';\n\nexport const TimerPadre = () => {\n\n    const [millisegundos, setMillisegundos] = useState(1000);\n\n    return (\n        <>\n            <span>Milisegundos { millisegundos }</span>\n\n            <br/>\n\n            <button className=\"btn btn-outline-success\"\n                    onClick={ () => setMillisegundos(1000) }>\n                1000\n            </button>\n\n            <button className=\"btn btn-outline-success\"\n                    onClick={ () => setMillisegundos(2000) }>\n                2000\n            </button>\n\n\n            <Timer milisegundos={ millisegundos } />\n        </>\n    )\n}","import { useReducer } from 'react';\n\nconst initialState = {\n    contador: 10,\n}\n\ntype ActionType = \n    | { type: 'incrementar' }\n    | { type: 'decrementar' }\n    | { type: 'custom', payload: number };\n\n\n\nconst contadorReducer = ( state: typeof initialState, action: ActionType ) => {\n\n    switch ( action.type ) {\n        case 'incrementar':\n            return {\n                ...state,\n                contador: state.contador + 1\n            }\n\n\n        case 'decrementar':\n            return {\n                ...state,\n                contador: state.contador - 1\n            }\n\n        case 'custom':\n            return {\n                ...state,\n                contador: action.payload\n            }\n            \n    \n        default:\n            return state;\n    }\n}\n\n\n\n\n\nexport const ContadorRed = () => {\n\n    const [ { contador }, dispatch] = useReducer(contadorReducer, initialState);\n\n\n    return (\n        <>\n         <h2>Contador: { contador }</h2> \n         <button className=\"btn btn-outline-primary\"\n                onClick={ () => dispatch({ type: 'incrementar' }) }>\n            +1\n         </button>\n         <button className=\"btn btn-outline-primary\"\n                onClick={ () => dispatch({ type: 'decrementar' }) }>\n            -1\n         </button>\n\n         <button className=\"btn btn-outline-danger\"\n                onClick={ () => dispatch({ type: 'custom', payload: 100 }) }>\n            100\n         </button>\n        </>\n    )\n}","import { Counter } from './components/Counter';\nimport { Usuario } from './components/Usuario';\n\nimport { TimerPadre } from './components/TimerPadre';\nimport { ContadorRed } from './components/ContadorRed';\n\n\nfunction App() {\n  return (\n    <>\n      <h1>React + TypeScript</h1>\n      <hr/>\n\n      <h2>useState</h2>\n      <Counter />\n\n      <Usuario />\n\n      <h2>useEffect - useRef</h2>\n      <hr/>\n\n      <TimerPadre />\n\n      <h2>useReducer</h2>\n      <hr/>\n      <ContadorRed />\n\n\n\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}